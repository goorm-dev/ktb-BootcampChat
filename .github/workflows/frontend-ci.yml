name: Frontend CI

on:
  push:
    branches: [ main, dev, jacky ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    name: Deploy Next.js frontend to S3
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      PROJECT_NAME: frontend
      BUILD_DIR: frontend/out

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: frontend
        run: npm install --legacy-peer-deps

      - name: Build Next.js project
        working-directory: frontend
        run: npm run build && npm run export

      - name: Create .env.production
        working-directory: frontend
        run: echo "${{ secrets.ENV_FRONTEND_PROD }}" > .env.production

      - name: Archive build as ZIP
        run: |
          zip -r $PROJECT_NAME-$(date +%Y%m%d-%H%M%S).zip $BUILD_DIR
          export ZIP_NAME=$(ls *.zip)
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Upload ZIP to archive bucket (8-ktb-chat-cloudfront)
        run: |
          aws s3 cp $ZIP_NAME s3://8-ktb-chat-cloudfront/$ZIP_NAME
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync build to deploy bucket (chat.goorm-ktb-008.goorm.team)
        run: |
          aws s3 sync $BUILD_DIR s3://chat.goorm-ktb-008.goorm.team --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E2UUSZ0MG179D8 \
            --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
